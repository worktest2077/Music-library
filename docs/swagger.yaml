basePath: /
definitions:
  models.CreateSongRequest:
    properties:
      group:
        minLength: 1
        type: string
      song:
        minLength: 1
        type: string
    required:
    - group
    - song
    type: object
  models.Song:
    properties:
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
    required:
    - group
    - song
    type: object
host: localhost:8081
info:
  contact: {}
  description: API for managing music library
  title: Music Library API
  version: "1.0"
paths:
  /songs:
    get:
      consumes:
      - application/json
      description: Get list of songs with pagination and filtering
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      - description: Filter by group
        in: query
        name: group
        type: string
      - description: Filter by song name
        in: query
        name: song
        type: string
      - description: Filter by release date
        in: query
        name: releaseDate
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
      summary: Get songs list
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Create a new song
      parameters:
      - description: Song info
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.CreateSongRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Song'
      summary: Create song
      tags:
      - songs
  /songs/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a song
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete song
      tags:
      - songs
    put:
      consumes:
      - application/json
      description: Update an existing song
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated song info
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Song'
      summary: Update song
      tags:
      - songs
  /songs/{id}/text:
    get:
      consumes:
      - application/json
      description: Get song text with pagination by verses
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Verses per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get song text
      tags:
      - songs
swagger: "2.0"
